<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE suite SYSTEM "http://testng.org/testng-1.0.dtd">
<suite thread-count="2" guice-stage="DEVELOPMENT" name="Failed suite [Platform Services API]" parallel="tests">
  <parameter name="env" value="qa2"/>
  <listeners>
    <listener class-name="org.uncommons.reportng.HTMLReporter"/>
    <listener class-name="common.RemoveDuplicateResults"/>
    <listener class-name="common.RetryListener"/>
    <listener class-name="org.uncommons.reportng.JUnitXMLReporter"/>
  </listeners>
  <test thread-count="2" name="SMS(failed)" parallel="tests">
    <classes>
      <class name="smsservice.DomesticSMS">
        <methods>
          <include name="smsservice"/>
        </methods>
      </class> <!-- smsservice.DomesticSMS -->
    </classes>
  </test> <!-- SMS(failed) -->
  <test thread-count="2" name="Email(failed)" parallel="methods">
    <classes>
      <class name="email.EmailSpamScore">
        <methods>
          <include name="message"/>
        </methods>
      </class> <!-- email.EmailSpamScore -->
      <class name="email.Email_Template_true">
        <methods>
          <include name="message"/>
        </methods>
      </class> <!-- email.Email_Template_true -->
      <class name="email.EmailPost">
        <methods>
          <include name="message"/>
        </methods>
      </class> <!-- email.EmailPost -->
      <class name="email.EmailwithAttachments">
        <methods>
          <include name="message"/>
        </methods>
      </class> <!-- email.EmailwithAttachments -->
      <class name="email.GeneratePKPass">
        <methods>
          <include name="generatePKPass"/>
        </methods>
      </class> <!-- email.GeneratePKPass -->
      <class name="email.GeneratePDF">
        <methods>
          <include name="generatePDF"/>
        </methods>
      </class> <!-- email.GeneratePDF -->
    </classes>
  </test> <!-- Email(failed) -->
  <test thread-count="2" name="Whatsapp(failed)" parallel="methods">
    <classes>
      <class name="whatsappService.WhatsappWebhookMessage">
        <methods>
          <include name="message"/>
        </methods>
      </class> <!-- whatsappService.WhatsappWebhookMessage -->
      <class name="whatsappService.WhatsappUserMessage">
        <methods>
          <include name="message"/>
        </methods>
      </class> <!-- whatsappService.WhatsappUserMessage -->
      <class name="whatsappService.WhatsappDeliveryFeedback">
        <methods>
          <include name="message"/>
        </methods>
      </class> <!-- whatsappService.WhatsappDeliveryFeedback -->
      <class name="whatsappService.WhatsappOptinFlow">
        <methods>
          <include name="message"/>
        </methods>
      </class> <!-- whatsappService.WhatsappOptinFlow -->
      <class name="whatsappService.WhatsappMultilanguageSupport">
        <methods>
          <include name="message"/>
        </methods>
      </class> <!-- whatsappService.WhatsappMultilanguageSupport -->
      <class name="whatsappService.WhatsappOptinFlowStatus">
        <methods>
          <include name="message"/>
        </methods>
      </class> <!-- whatsappService.WhatsappOptinFlowStatus -->
      <class name="whatsappService.WhatsappCheckContacts">
        <methods>
          <include name="checkContacts"/>
        </methods>
      </class> <!-- whatsappService.WhatsappCheckContacts -->
      <class name="whatsappService.WhatsappUserMessageWithAttachment">
        <methods>
          <include name="message"/>
        </methods>
      </class> <!-- whatsappService.WhatsappUserMessageWithAttachment -->
    </classes>
  </test> <!-- Whatsapp(failed) -->
</suite> <!-- Failed suite [Platform Services API] -->
